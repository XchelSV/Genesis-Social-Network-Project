doctype html
html
  head
    title Genesis Mesoamerica
    meta(http-equiv="Content-type" content="text/html", charset="UTF-8")
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')

    link(href='http://fonts.googleapis.com/css?family=Droid+Sans:400,700|Droid+Serif', rel='stylesheet', type='text/css')
    link(href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css')
    link(rel='stylesheet', type='text/css', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css')
    
    link(rel='stylesheet', type='text/css',href='css/animate.css')
    // CSS reset
    link(rel='stylesheet', type='text/css',href='css/style2.css')
    link(rel='stylesheet', type='text/css',href='css/styles.css')
    script(type='text/javascript', src = 'js/jquery-2.1.1.js') 
    style.
      html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      }
      #map {
      height: 92%;
      
      }
      .controls {
      margin-top: 10px;
      border: 1px solid transparent;
      border-radius: 2px 0 0 2px;
      box-sizing: border-box;
      -moz-box-sizing: border-box;
      height: 32px;
      outline: none;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
      #pac-input {
      background-color: #fff;
      font-family: Roboto;
      font-size: 15px;
      font-weight: 300;
      margin-left: 12px;
      padding: 0 11px 0 13px;
      text-overflow: ellipsis;
      width: 300px;
      }
      #pac-input:focus {
      border-color: #4d90fe;
      }
      .pac-container {
      font-family: Roboto;
      }
      #type-selector {
      color: #fff;
      background-color: #4d90fe;
      padding: 5px 11px 0px 11px;
      }
      #type-selector label {
      font-family: Roboto;
      font-size: 13px;
      font-weight: 300;
      }
  body.animated.fadeIn
    .row
      .col-md-1.col-md-offset-10(style='position:absolute;z-index:10;margin-top:1%')
          a(href='/showUsers')  
                button.btn.btn-default.btn-lg.btn-block
                  span.glyphicon.glyphicon-share-alt(aria-hidden="true")
    input#pac-input.controls(type='text', placeholder='Enter a location')
    #type-selector.controls
      input#changetype-all(type='radio', name='type', checked='checked')
      label(for='changetype-all') All
      input#changetype-establishment(type='radio', name='type')
      label(for='changetype-establishment') Establishments
      input#changetype-address(type='radio', name='type')
      label(for='changetype-address') Addresses
      input#changetype-geocode(type='radio', name='type')
      label(for='changetype-geocode') Geocodes
    #map
    button.btn.btn-lg.btn-block.btn-primary#btn-save Agregar Lugar
  
            
    
            
    

    script.
      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
      function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 13
      });
      var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));
      var types = document.getElementById('type-selector');
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);
      var autocomplete = new google.maps.places.Autocomplete(input);
      autocomplete.bindTo('bounds', map);
      var infowindow = new google.maps.InfoWindow();
      var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
      });
      autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
        $('#btn-save').click(function(){
            $.ajax({
              method: "POST",
              url: "/place",
              data: {place_id:place.place_id,location:[place.geometry.location.lat(),place.geometry.location.lng()],formatted_address:place.formatted_address}
            })
            .done(function( msg ) {
                alert( "Data Saved: " + msg );
            });
      })
      console.log(place);
      if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
      }
      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
      }));
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);
      var address = '';
      if (place.address_components) {
      address = [
      (place.address_components[0] && place.address_components[0].short_name || ''),
      (place.address_components[1] && place.address_components[1].short_name || ''),
      (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
      }
      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, marker);
      });
      // Sets a listener on a radio button to change the filter type on Places
      // Autocomplete.
      function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      radioButton.addEventListener('click', function() {
      autocomplete.setTypes(types);
      });
      }
      setupClickListener('changetype-all', []);
      setupClickListener('changetype-address', ['address']);
      setupClickListener('changetype-establishment', ['establishment']);
      setupClickListener('changetype-geocode', ['geocode']);
    
      }
      
    script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyApGDtXEF9UYqdCmutZaV7tS2vW6x1LgOQ&signed_in=true&libraries=places&callback=initMap', async='', defer='')
